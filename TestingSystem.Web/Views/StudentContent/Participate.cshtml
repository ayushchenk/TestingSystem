@model TestingSystem.Web.Models.ViewModels.ParticipateViewModel
@{
    ViewBag.Title = "Participate";
    Layout = "~/Views/Shared/_StudentLayout.cshtml";
    int secondsRemaining = Model.Seconds;


}
@using (Html.BeginForm("Participate", "StudentContent", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div style="position:fixed;"><h3 id="countdown"></h3></div>

    <div class="container">
        @Html.HiddenFor(model => model.Length)
        @Html.HiddenFor(model => model.SubjectId)
        @Html.HiddenFor(model => model.GroupInTestId)
        @Html.HiddenFor(model => model.StudentId)
        @Html.HiddenFor(model => model.QuestionCount)
        @Html.HiddenFor(model => model.EndTime)
        @Html.HiddenFor(model => model.StartTime)

        @for (int i = 0; i < Model.QuestionCount; i++)
        {
            <div class="row">
                @Html.HiddenFor(model => model.QuestionAnswers[i].Question.Id)
                @Html.HiddenFor(model => model.QuestionAnswers[i].Question.QuestionString)
                @Html.HiddenFor(model => model.QuestionAnswers[i].Question.ImagePath)
                <div class="col-md-1 col-sm-1">
                </div>
                <div class="col-md-10 col-sm-10">
                    <div class="question-container" style="border: 1px solid black; border-radius: 20px; background-color:#ededed; padding:15px;">
                        <pre style="margin:15px;">@Model.QuestionAnswers[i].Question.QuestionString</pre>

                        @if (!String.IsNullOrWhiteSpace(@Model.QuestionAnswers[i].Question.ImagePath))
                        {
                            <div class="row" style="margin: 15px; align-content:center;">
                                <a class="venobox" href="@Model.QuestionAnswers[i].Question.ImagePath">
                                    <img src="@Model.QuestionAnswers[i].Question.ImagePath" alt="image alt" style="width:50%; display: block; margin-left: auto; margin-right: auto;" />
                                </a>
                            </div>
                        }

                        @for (int j = 0; j < Model.QuestionAnswers[i].Answers.Count; j++)
                        {
                            <div class="row" style="margin:15px;">
                                @Html.HiddenFor(model => model.QuestionAnswers[i].Answers[j].Id)
                                @Html.HiddenFor(model => model.QuestionAnswers[i].Answers[j].IsCorrect)
                                @Html.HiddenFor(model => model.QuestionAnswers[i].Answers[j].AnswerString)
                                @switch (Model.QuestionAnswers[i].QuestionType)
                                {
                                    case TestingSystem.Web.Models.ViewModels.QuestionType.ManyAnswersManyCorrect:
                                        @Html.HiddenFor(model => model.QuestionAnswers[i].Answers[j].PickedCheckbox.AnswerId, new { Value = $"{Model.QuestionAnswers[i].Answers[j].Id}" })
                                        <div class="col-md-1 col-sm-1">
                                            @Html.CheckBoxFor(model => model.QuestionAnswers[i].Answers[j].PickedCheckbox.Checked)
                                        </div>
                                        <div class="col-md-11 col-sm-11">
                                            <pre style="max-width:700px;"><code>@Model.QuestionAnswers[i].Answers[j].AnswerString</code></pre>
                                        </div>
                                        break;
                                    case TestingSystem.Web.Models.ViewModels.QuestionType.ManyAnswersOneCorrect:
                                        <div class="col-md-1 col-sm-1">
                                            @Html.RadioButtonFor(model => Model.QuestionAnswers[i].AnswerId, Model.QuestionAnswers[i].Answers[j].Id)
                                        </div>
                                        <div class="col-md-11 col-sm-11">
                                            <pre>@Model.QuestionAnswers[i].Answers[j].AnswerString</pre>
                                        </div>
                                        break;
                                    case TestingSystem.Web.Models.ViewModels.QuestionType.OneAnswerOneCorrect:
                                        @Html.EditorFor(model => model.QuestionAnswers[i].AnswerString, new { htmlAttributes = new { @class = "form-control", style = "width: 850px;" } })
                                        break;
                                }
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-1 col-sm-1">
                </div>
            </div>
            <hr />
        }
        <input type="submit" value="Submit" id="btn-submit" onclick="btnLimiter()">
    </div>
}
@section Scripts {
    <script type="text/javascript">
        function startTimer(duration, display) {
            var timer = duration, minutes, seconds;
            setInterval(function () {
                minutes = parseInt(timer / 60, 10);
                seconds = parseInt(timer % 60, 10);

                minutes = minutes < 10 ? "0" + minutes : minutes;
                seconds = seconds < 10 ? "0" + seconds : seconds;

                display.text(minutes + ":" + seconds);

                if (--timer < 0) {
                    timer = duration;
                }
            }, 1000);
        }

        $('.venobox').venobox();

        $(function () {
            var seconds = @secondsRemaining;
            startTimer(seconds,  $('#countdown'));
            setTimeout(function(){
                $("form").submit();
            }, seconds * 1000);


            $("#btn-submit").click(function(e){
                e.preventDefault();
                if(confirm("Are you sure want to end?"))
                    $("form").submit();
            });
        });

        function btnLimiter() {
            var btn = document.getElementById('btn-submit')
            setTimeout(function () {
                btn.setAttribute('disabled', 'disabled');
            }, 1);

            setTimeout(function () {
                btn.removeAttribute('disabled');
            }, 10000);
        }
    </script>
}