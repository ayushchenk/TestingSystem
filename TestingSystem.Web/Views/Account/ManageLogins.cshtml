@model TestingSystem.Web.Models.Identity.ManageLoginsViewModel
@using Microsoft.Owin.Security
@{
    ViewBag.Title = "Manage your external logins";
    if (User.IsInRole("Student"))
    {
        Layout = "~/Views/Shared/_StudentLayout.cshtml";
    }
    if (User.IsInRole("Teacher"))
    {
        Layout = "~/Views/Shared/_TeacherLayout.cshtml";
    }
    if (User.IsInRole("Education Unit Admin"))
    {
        Layout = "~/Views/Shared/_GlobalAdminLayout.cshtml";
    }
    if (User.IsInRole("Global Admin"))
    {
        Layout = "~/Views/Shared/_GlobalAdminLayout.cshtml";
    }
}
<h2>@ViewBag.Title.</h2>
<p class="text-success">@ViewBag.StatusMessage</p>
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        if (Model.CurrentLogins.Count > 0)
        {
            <h4>Registered Logins</h4>
            <table class="table">
                <tbody>
                    @foreach (var account in Model.CurrentLogins)
                    {
                        <tr>
                            <td>@account.LoginProvider</td>
                            <td>
                                @if (ViewBag.ShowRemoveButton)
                                {
                                    using (Html.BeginForm("RemoveLogin", "Account"))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div>
                                            @Html.Hidden("loginProvider", account.LoginProvider)
                                            @Html.Hidden("providerKey", account.ProviderKey)
                                            <input type="submit" class="btn btn-danger" value="Remove" title="Remove this @account.LoginProvider login from your account" />
                                        </div>
                                    }
                                }
                                else
                                {
                                    @: &nbsp;
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        if (Model.OtherLogins.Count > 0)
        {
            using (Html.BeginForm("LinkLogin", "Account"))
            {
                @Html.AntiForgeryToken()
                <div id="socialLoginList">
                    <p>
                        @foreach (AuthenticationDescription p in Model.OtherLogins)
                        {
                            if (User.IsInRole("Student"))
                            {
                                <button type="submit" class="btn btn-success" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                            }
                            else if (User.IsInRole("Teacher"))
                            {
                                <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                            }
                        }
                    </p>
                </div>
            }
        }
        if (User.IsInRole("Student"))
        {
            <span>
                <a href="@Url.Action("Profile","StudentContent")" class="btn btn-primary">Back</a>
            </span>
        }
        if (User.IsInRole("Teacher"))
        {
            <span>
                <a href="@Url.Action("Profile","TeacherContent")" class="btn btn-primary">Back</a>
            </span>
        }
        if (User.IsInRole("Education Unit Admin") || User.IsInRole("Global Admin"))
        {
            <span>
                <a href="@Url.Action("Profile","AdminContent")" class="btn btn-primary">Back</a>
            </span>
        }
    }
}