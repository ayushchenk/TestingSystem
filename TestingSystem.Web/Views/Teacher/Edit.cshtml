@model TestingSystem.BOL.Model.TeacherDTO
@using System.Text;
@using TestingSystem.Web.Content.Resources
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_GlobalAdminLayout.cshtml";
    //if (User.IsInRole("Global Admin"))
    //{
    //}
    //if (User.IsInRole("Education Unit Admin"))
    //{
    //    Layout = "~/Views/Shared/_UnitAdminLayout.cshtml";
    //}
    string authInfo = ApiInfo.USERNAME_VALUE + ":" + ApiInfo.PASSWORD_VALUE;
    authInfo = Convert.ToBase64String(Encoding.UTF8.GetBytes(authInfo));
}
<h2>Edit teacher</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.IsDeleted)
        @Html.HiddenFor(model => model.LastName)
        @Html.HiddenFor(model => model.Email)
        @Html.HiddenFor(model => model.SubjectId)
        @Html.HiddenFor(model => model.FirstName)
        @Html.HiddenFor(model => model.EducationUnitId)


        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Global Admin"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.EducationUnitId, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.EducationUnitId, (SelectList)ViewBag.EducationUnits, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EducationUnitId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.SpecializationId, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SpecializationId, (SelectList)ViewBag.Specializations, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SpecializationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="subject-container">
            @Html.Label("Subjects", new { @class = "col-md-2 control-label" })
            <div class="col-md-10 col-sm-10" id="subjects">
                @for (int i = 0; i < Model.Subjects.Count; i++)
                {
                    <div data-id="@i" data-subject-id="@Model.Subjects[i].Id">
                        @Html.HiddenFor(model => model.Subjects[i].Id)
                        @Html.HiddenFor(model => model.Subjects[i].SubjectName)
                        @Html.HiddenFor(model => model.Subjects[i].SpecializationId)
                        @Html.HiddenFor(model => model.Subjects[i].EducationUnitId)
                        @Html.EditorFor(model => model.Subjects[i].SubjectName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        <input type="button" value="Delete" class="btn-delete-subject btn btn-default" />
                    </div>
                }
            </div>
        </div>

        @*<div class="form-group" id="subject-cont">
                @Html.LabelFor(model => model.SubjectId, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SubjectId, (SelectList)ViewBag.Subjects, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" id="submit" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            count = @Model.Subjects.Count

            //$("#SpecializationId").change(function () {
            $("body").on("change", "#SpecializationId", function () {
                subjects = $("#subject-container");
                @*$("#SubjectId").prop("disabled", false);
                $.getJSON("@Url.Action("GetSubjectsBySpecialization", "Service")", { id: $(this).val() }, function (response) {
                    subjects.empty();
                    $.each(response, function (index, item) {
                        subjects.append($('<option></option>').text(item.SubjectName).val(item.Id));
                    });
                });
                subjects.val([]);*@
                $("#subjects").children("div").each(function (index) {
                    $.ajax({
                        url: "/api/TeacherInSubjectsApi/post",
                        data: JSON.stringify({
                            TeacherId:@Model.Id,
                            subjectId: $(this).attr("data-subject-id")
                        }),
                        headers: {
                            'Authorization': 'Basic @authInfo',
                            '@ApiInfo.API_KEY_HEADER': '@ApiInfo.API_KEY_VALUE',
                            'Content-Type': 'application/json'
                        },
                        type: "POST",
                    });
                });

                subjects.remove();
            });

            $(".btn-delete-subject").click(function () {
                if (count > 1 && confirm("Are you sure?")) {
                    subjectId = $(this).closest("div").attr("data-subject-id");
                        selectedId = $(this).closest("div").attr("data-id");
                        for (i = selectedId; i < count; i++) {
                            hiddenId = $(`#Subjects_${i}__Id`).attr("id", `Subjects_${i - 1}__Id`);
                            hiddenId.attr("name", `Subjects[${i - 1}].Id`);
                            hiddenSubjectName = $(`#Subjects_${i}__SubjectName`).attr("id", `Subjects_${i - 1}__SubjectName`);
                            hiddenSubjectName.attr("name", `Subjects[${i - 1}].SubjectName`);
                            hiddenSpecId = $(`#Subjects_${i}__SpecializationId`).attr("id", `Subjects_${i - 1}__SpecializationId`);
                            hiddenSpecId.attr("name", `Subjects[${i - 1}].SpecializationId`);
                            hiddenUnitId = $(`#Subjects_${i}__EducationUnitId`).attr("id", `Subjects_${i - 1}__EducationUnitId`);
                            hiddenUnitId.attr("name", `Subjects[${i - 1}].EducationUnitId`);
                        }
                        $(this).closest("div").remove();
                        count--;
                        $.ajax({
                            url: "/api/TeacherInSubjectsApi/post",
                            data: JSON.stringify({
                                TeacherId:@Model.Id,
                                subjectId: subjectId
                            }),
                            headers: {
                                'Authorization': 'Basic @authInfo',
                                '@ApiInfo.API_KEY_HEADER': '@ApiInfo.API_KEY_VALUE',
                                'Content-Type': 'application/json'
                            },
                            type: "POST",
                        });
                }
            });
        });
    </script>
}
