@model TestingSystem.Web.Models.ViewModels.CreateTeacherViewModel
@using System.Text;
@using TestingSystem.Web.Content.Resources
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_GlobalAdminLayout.cshtml";
}
<h2>Edit teacher</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Teacher.Id)
        @Html.HiddenFor(model => model.Teacher.IsDeleted)
        @Html.HiddenFor(model => model.Teacher.Email)
        @Html.HiddenFor(model => model.Teacher.EducationUnitId)


        <div class="form-group">
            @Html.LabelFor(model => model.Teacher.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Teacher.Email, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Teacher.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Teacher.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Teacher.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Teacher.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Teacher.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Teacher.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Teacher.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Global Admin"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Teacher.EducationUnitId, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Teacher.EducationUnitId, (SelectList)ViewBag.EducationUnits, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Teacher.EducationUnitId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Teacher.SpecializationId, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Teacher.SpecializationId, (SelectList)ViewBag.Specializations, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Teacher.SpecializationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <div class="card">
                    <div class="card-header" id="headingOne">
                        <h2 class="mb-0">
                            <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                Subjects
                            </button>
                        </h2>
                    </div>

                    <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordionExample">
                        <div class="card-body">
                            <label><input type="checkbox" id="ch-all" /> All</label>
                            <hr />
                            <div id="subjects-container">
                                @foreach (var item in Model.Subjects)
                                {
                                    <div class="checkbox">
                                        <label>
                                            <input type="checkbox"
                                                   name="SelectedSubjects"
                                                   value="@item.Value"
                                                   @if (Model.SelectedSubjects.Contains(int.Parse(item.Value))) { <text> checked </text> } /> @item.Text
                                            </label>
                                        </div>
                                    }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" id="submit" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/bootstrap-notify.min.js")"></script>
    <script type="text/javascript">
        $(function () {
            if ($('input[name="SelectedSubjects"]:checked').length == $('input[name="SelectedSubjects"]').length) {
                $("#ch-all").prop('checked', true);
            }

            $("#ch-all").change(function () {
                $('input:checkbox').prop('checked', $(this).prop('checked'));
            });

            $("body").on("change", 'input[name="SelectedSubjects"]', function () {
                numberOfChecked = $('input[name="SelectedSubjects"]:checked').length;
                numberOfAll = $('input[name="SelectedSubjects"]').length;
                if (numberOfChecked == numberOfAll) {
                    $("#ch-all").prop('checked', true);
                }
                else {
                    $("#ch-all").prop('checked', false);
                }
            });

            $("#submit").click(function (e) {
                numberOfChecked = $('input[name="SelectedSubjects"]:checked').length;
                if (numberOfChecked == 0) {
                    e.preventDefault();
                    alert("Select at least one theme");
                    return;
                }
            });

            $("body").on("change", "#Teacher_SpecializationId", function () {
                subjects = $("#subjects-container");
                $("#ch-all").prop('checked', false);
                $.getJSON("@Url.Action("GetSubjectsBySpecialization", "Service")", { id: $(this).val() }, function (response) {
                    subjects.empty();
                    $.each(response, function (index, item) {
                        html = `<div class="checkbox">
                                    <label>
                                         <input type="checkbox"
                                                name="SelectedSubjects"
                                                data-id="${item.Id}"
                                                value="${item.Id}"/> ${item.SubjectName}
                                    </label>
                                </div>`;
                        subjects.append(subjects.append(html));
                    });
                });
            });
        });
    </script>
}
