@model TestingSystem.Web.Models.ViewModels.EditUserViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.User.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.User.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.Patronymic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.Patronymic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.Patronymic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.EducationUnitId, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.User.EducationUnitId, (IEnumerable<SelectListItem>)ViewBag.EducationUnits, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.User.EducationUnitId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Role, (IEnumerable<SelectListItem>)ViewBag.Roles, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="group-cont">
            @Html.LabelFor(model => model.User.GroupId, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.User.GroupId, (IEnumerable<SelectListItem>)ViewBag.Groups, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.User.GroupId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="subject-cont">
            @Html.LabelFor(model => model.User.SubjectId, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.User.SubjectId, (IEnumerable<SelectListItem>)ViewBag.Subjects, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.User.SubjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" id="submit" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            role = "@Model.Role";
            if (role != "Teacher") {
                $("#subject-cont").hide();
                $("#subject-cont").val([]);
            }

            $("#User_EducationUnitId").change(function () {
                groups = $("#User_GroupId");
                $.getJSON("@Url.Action("GetGroupsByUnit", "Service")", { id: $(this).val() }, function (response) {
                    groups.empty();
                    $.each(response, function (index, item) {
                        groups.append($('<option></option>').text(item.GroupName).val(item.Id));
                    });
                });
                groups.val([]);
            });

            $("#Role").change(function () {
                if ($(this).val() == "Student") {
                    $("#subject-cont").hide();
                    $("#User_SubjectId").val([]);
                } else if ($(this).val() == "Teacher") {
                    $("#subject-cont").show();
                    $("#User_GroupId").val([]);
                } else {
                    $("#User_GroupId").val([]);
                    $("#subject-cont").hide();
                }
                $("#User_SubjectId").val([]);
                $("#User_GroupId").val([]);
            });

            $("#submit").click(function (e) {
                role = $("#Role");
                if (!role.val()) {
                    alert("Select role");
                    e.preventDefault();
                }
                if (role.val() == "Student" && !$("#User_GroupId").val()) {
                    alert("Select group");
                    e.preventDefault();
                }
                if (role.val() == "Teacher" && !$("#User_SubjectId").val()) {
                    alert("Select subject");
                    e.preventDefault();
                }
            });
        });
    </script>
}
