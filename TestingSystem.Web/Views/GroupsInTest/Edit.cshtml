@model TestingSystem.Web.Models.ViewModels.AssignGroupItem

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2> @Model.Group.GroupName </h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Group.Id)
        @Html.HiddenFor(model => model.Group.SpecializationId)
        @Html.HiddenFor(model => model.Group.GroupName)
        @Html.HiddenFor(model => model.Group.EducationUnitId)
        @Html.HiddenFor(model => model.GroupInTest.Id)
        @Html.HiddenFor(model => model.GroupInTest.GroupId)
        @Html.HiddenFor(model => model.GroupInTest.TestId)

        <div class="form-group">
            @Html.LabelFor(model => model.GroupInTest.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GroupInTest.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GroupInTest.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GroupInTest.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GroupInTest.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GroupInTest.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GroupInTest.Length, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GroupInTest.Length, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GroupInTest.Length, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Groups", new { id = Model.GroupInTest.TestId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
