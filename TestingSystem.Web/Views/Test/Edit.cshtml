@model TestingSystem.Web.Models.ViewModels.CreateTestViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_TeacherLayout.cshtml";
}
@using (Html.BeginForm("Edit", "test"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Test.Id)
        @Html.HiddenFor(model => model.Test.TeacherId)
        @Html.HiddenFor(model => model.Test.IsDeleted)

        <div class="form-group">
            @Html.LabelFor(model => model.Test.TestName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Test.TestName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Test.TestName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="subject-cont">
            @Html.LabelFor(m => m.Test.SubjectName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Test.SubjectId, ViewBag.Subjects as SelectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Test.SubjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Test.EasyCount, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Test.EasyCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Test.EasyCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Test.MediumCount, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Test.MediumCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Test.MediumCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Test.HardCount, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Test.HardCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Test.HardCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <div class="card">
                    <div class="card-header" id="headingOne">
                        <h2 class="mb-0">
                            <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                Themes
                            </button>
                        </h2>
                    </div>

                    <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordionExample">
                        <div class="card-body">
                            <label><input type="checkbox" id="ch-all"/> All</label><hr/>
                            @foreach (var item in Model.Themes)
                            {
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox"
                                               name="SelectedThemes"
                                               value="@item.Value"
                                               @if (Model.SelectedThemes.Contains(Convert.ToInt32(item.Value))) { <text> checked </text> } /> @item.Text
                                        </label>
                                    </div>
                                }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" id="submit" onclick="submitLimit()" />
            </div>
        </div>

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            @*$("#SpecializationId").change(function () {
                subjects = $("#SubjectId");
                $("#subject-cont").show();
                $.getJSON("@Url.Action("GetSubjectsBySpecialization", "Service")", { id : $(this).val()}, function (response) {
                    subjects.empty();
                    $.each(response, function (index, item) {
                        subjects.append($('<option></option>').text(item.SubjectName).val(item.Id));
                    });
                });
            });*@

            $("#ch-all").click(function () {
                $('input:checkbox').prop('checked', $(this).prop('checked'));
            });

            $("#submit").click(function (e) {
                easyCount = $("#Test_EasyCount").val();
                mediumCount = $("#Test_MediumCount").val();
                hardCount = $("#Test_HardCount").val();
                numberOfChecked = $('input:checkbox:checked').length;
                if (easyCount + mediumCount + hardCount <= 0 ) {
                    e.preventDefault();
                    alert("Input correct questions count");
                }
                if (numberOfChecked == 0) {
                    e.preventDefault();
                    alert("Select at least one theme");
                }
            });
        });
        function submitLimit() {
            var btn = document.getElementById('submit')
            setTimeout(function () {
                btn.setAttribute('disabled', 'disabled');
            }, 1);

            setTimeout(function () {
                btn.removeAttribute('disabled');
            }, 5000);
        }
    </script>
}
