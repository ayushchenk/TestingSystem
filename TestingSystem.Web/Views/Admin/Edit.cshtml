@model TestingSystem.BOL.Model.AdminDTO

@{
    ViewBag.Title = "Edit";
    //if (User.IsInRole("Education Unit Admin"))
    //{
    //    Layout = "~/Views/Shared/_UnitAdminLayout.cshtml";
    //}
    //if (User.IsInRole("Global Admin"))
    //{
    //}
    Layout = "~/Views/Shared/_GlobalAdminLayout.cshtml";
}

<h2>Edit admin</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Email)
        @Html.HiddenFor(model => model.EducationUnitId)

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Global Admin"))
        {
            <div class="form-group" id="group-cont">
                @Html.LabelFor(model => model.IsGlobal, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsGlobal, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EducationUnitId, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.EducationUnitId, (SelectList)ViewBag.EducationUnits, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EducationUnitId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" id="submit" onclick="submitLimit()" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            $("#EducationUnitId").val([]);

            $("#IsGlobal").change(function () {
                $("#EducationUnitId").prop('disabled', this.checked);
                $("#EducationUnitId").val([]);
            });

            $("#submit").click(function (e) {
                if (!$("#IsGlobal").prop('checked') && ($("#EducationUnitId").val() == null || $("#EducationUnitId").val() == undefined)) {
                    e.preventDefault();
                    alert("Non-global admin should have education unit");
                }
            });
        });

        function submitLimit() {
            var btn = document.getElementById('submit')
            setTimeout(function () {
                btn.setAttribute('disabled', 'disabled');
            }, 1);

            setTimeout(function () {
                btn.removeAttribute('disabled');
            }, 10000);
        }
    </script>
}