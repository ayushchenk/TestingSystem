@model TestingSystem.Web.Models.ViewModels.CreateQuestionViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Question", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Question.Id)
        @*@Html.HiddenFor(model => model.Question.QuestionImageId)*@

        <div class="form-group">
            @Html.LabelFor(model => model.Question.QuestionString, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Question.QuestionString, rows: 5, columns: 100, htmlAttributes: new { @class = "form-control", maxlength = 500 })
                @Html.ValidationMessageFor(model => model.Question.QuestionString, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Question.SpecializationName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Question.SpecializationId, (SelectList)ViewBag.Specializations, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Question.SpecializationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="subject-container">
            @Html.LabelFor(m => m.Question.SubjectName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Question.SubjectId, ((SelectList)ViewBag.Subjects), null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Question.SubjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Question.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" accept="image/*" name="file" id="file" class="form-control" />
                @Html.DropDownListFor(model => model.Question.QuestionImageId, (SelectList)ViewBag.Images, null, new { @class = "form-control" })
                <input type="button" value="Discard photo" id="btn-discard" class="btn btn-default"/>
            </div>
        </div>

        <div class="form-group" id="img-container">
            <div class="col-md-6">
                <img id="output" src="@Model.Question.ImagePath" style="max-height: 250px; max-width: 250px;" />
                <input type="button" value="Delete photo" id="btn-delete-photo" class="btn btn-default" style="margin-left: 20px;" />
            </div>
        </div>

        <div class="form-group" id="answer-cont-master">
            <div class="col-md-10">
                <table id="answer-cont">
                    <tbody>
                        <tr>
                            <th>Answers</th>
                            <th>IsCorrect</th>
                            <th>Action</th>
                        </tr>
                        @for (int i = 0; i < Model.Answers.Count(); i++)
                        {
                            <tr data-id="@i">
                                @Html.HiddenFor(model => model.Answers[i].Id)
                                <td>@Html.TextAreaFor(model => model.Answers[i].AnswerString, rows: 2, columns: 100, htmlAttributes: new { @class = "form-control" })</td>
                                <td class="text-center">@Html.EditorFor(model => model.Answers[i].IsCorrect)</td>
                                <td><input type="button" value="Remove" class="btn-remove btn btn-default" /></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input type="button" class="btn btn-default" id="add-item" value="Add answer" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" id="submit" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            specId = @Model.Question.SpecializationId;
            subId = @Model.Question.SubjectId;
            if(specId == 0)
                $("#Question_SpecializationId").val([]);
            if(subId == 0)
                $("#subject-container").hide();

            id = @Model.Answers.Count();
            if(!$("#output").attr("src"))
                $("select#Question_QuestionImageId").val([]);

            isPathEmpty = $.parseJSON("@string.IsNullOrWhiteSpace(Model.Question.ImagePath)".toLowerCase());
            if(isPathEmpty)
                $("#img-container").hide();

            if(id == 0)
                $("#answer-cont-master").hide();

            $("#add-item").click(function () {
                if (id < 10) {
                    $("#answer-cont-master").show();
                    html = `<tr data-id=${id}>` +
                                `<input type="hidden" id="Answers_${id}__Id" name="Answers[${id}].Id" value="0"/>` +
                                `<td> <textarea id="Answers_${id}__AnswerString" name="Answers[${id}].AnswerString" class="form-control" rows="2" columns="100" maxlength="250"/> </td>` +
                                `<td class="text-center"> <input type="checkbox" id="Answers_${id}__IsCorrect" name="Answers[${id}].IsCorrect" value="true"/>` +
                                `<input type="hidden" value="false" name="Answers[${id}].IsCorrect"/></td> ` +
                                `<td> <input type="button" value="Remove" class="btn-remove btn btn-default"/> </td>` +
                           "</tr>";
                    $.ajax({
                        url: this.href,
                        cache: false,
                        success: function () { $("#answer-cont").append(html); id++; }
                    });
                    return false;
                }
            });

            $("#answer-cont tbody").on("click", ".btn-remove", function () {
                selectedId = $(this).closest("tr").attr("data-id");
                tr = $(this).closest("tr");
                if(tr.children(`#Answers_${selectedId}__Id`).val() != 0){
                    $.ajax({
                        method : "POST",
                        url: "@Url.Action("DeleteAnswer", "Service")",
                        data :{id : tr.children(`#Answers_${selectedId}__Id`).val()}
                    });

                }
                tr.remove();
                id--;

                for (i = selectedId; i <= id; i++) {
                    $(`tr[data-id="${i}"]`).attr("data-id", i - 1);
                    answerString = $(`#Answers_${i}__AnswerString`);
                    answerString.attr("id", `Answers_${i - 1}__AnswerString`);
                    answerString.attr("name", `Answers[${i - 1}].AnswerString`);
                    isCorrect = $(`#Answers_${i}__IsCorrect`);
                    isCorrect.attr("id", `Answers_${i - 1}__IsCorrect`);
                    isCorrect.attr("name", `Answers[${i - 1}].IsCorrect`);
                    answerId = $(`#Answers_${i}__Id`).attr("name", `Answers[${i - 1}].Id`);
                    answerId.attr("id", `Answers_${i - 1}__Id`);
                    $(`[name="Answers[${id}].IsCorrect"][type="hidden"]`).attr("name", `Answers[${i - 1}].IsCorrect`);
                }

                if (id === 0) {
                    $("#answer-cont-master").hide();
                }
            });

            $("#btn-delete-photo").click(function(){
                $("#Question_QuestionImageId[type='hidden']").attr("value", null);
                $("select#Question_QuestionImageId").val([]);
                $("select#Question_QuestionImageId").show();
                $("#output").attr("src", "");
                $("#img-container").hide();
                $("#file").val("");
            });

            $("#btn-discard").click(function () {
                $("#file").val("");
                $("select#Question_QuestionImageId").show();
                if(isPathEmpty)
                {
                    $("#output").attr("src", "");
                    $("#img-container").hide();
                    $("select#Question_QuestionImageId").val([]);
                }
                else
                {
                    $("#output").attr("src", "@Model.Question.ImagePath");
                    $("select#Question_QuestionImageId").val("@Model.Question.QuestionImageId");
                }
            });

            $("#submit").click(function (e) {
                correctCount = 0;
                for (i = 0; i < id; i++) {
                    if ($(`#Answers_${i}__IsCorrect`).prop('checked') &&
                        $(`#Answers_${i}__AnswerString`).val() !== "") correctCount++;
                }
                if (correctCount === 0) {
                    alert("Question must have at least one correct answer");
                    e.preventDefault();
                }
            });

            $("#file").change(function (e) {
                $("#img-container").show();
                $("select#Question_QuestionImageId").val([]);
                $("select#Question_QuestionImageId").hide();
                $("#output").attr("src", URL.createObjectURL(e.target.files[0]));
            });

            $("#Question_SpecializationId").change(function () {
                subjects = $("#Question_SubjectId");
                $("#subject-container").show();
                $.getJSON("@Url.Action("GetSubjectsBySpecialization", "Service")", { id : $(this).val()}, function (response) {
                    subjects.empty();
                    $.each(response, function (index, item) {
                        subjects.append($('<option></option>').text(item.SubjectName).val(item.Id));
                    });
                });
            });

            $("select#Question_QuestionImageId").change(function(){
                $("#file").val("");
                $("#img-container").show();
                $("#output").attr("src", $("select#Question_QuestionImageId option:selected").text());
            });
        });
    </script>
}
